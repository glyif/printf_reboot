==1759== Memcheck, a memory error detector
==1759== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1759== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==1759== Command: ./a.out
==1759== 
--1759-- Valgrind options:
--1759--    -v
--1759-- Contents of /proc/version:
--1759--   Linux version 3.13.0-107-generic (buildd@lcy01-09) (gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.3) ) #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016
--1759-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx
--1759-- Page sizes: currently 4096, max supported 4096
--1759-- Valgrind library directory: /usr/lib/valgrind
--1759-- Reading syms from /home/vagrant/printf_reboot/a.out
--1759-- Reading syms from /lib/x86_64-linux-gnu/ld-2.19.so
--1759--   Considering /lib/x86_64-linux-gnu/ld-2.19.so ..
--1759--   .. CRC mismatch (computed 46abf574 wanted 3ca2d3ca)
--1759--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.19.so ..
--1759--   .. CRC is valid
--1759-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--1759--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--1759--   .. CRC mismatch (computed 4f1eed43 wanted a323a3ab)
--1759--    object doesn't have a symbol table
--1759--    object doesn't have a dynamic symbol table
--1759-- Scheduler: using generic scheduler lock implementation.
--1759-- Reading suppressions file: /usr/lib/valgrind/default.supp
==1759== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1759-by-vagrant-on-???
==1759== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1759-by-vagrant-on-???
==1759== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1759-by-vagrant-on-???
==1759== 
==1759== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1759== don't want to do, unless you know exactly what you're doing,
==1759== or are doing some strange experiment):
==1759==   /usr/lib/valgrind/../../bin/vgdb --pid=1759 ...command...
==1759== 
==1759== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1759==   /path/to/gdb ./a.out
==1759== and then give GDB the following command
==1759==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=1759
==1759== --pid is optional if only one valgrind process is running
==1759== 
--1759-- REDIR: 0x4019c50 (ld-linux-x86-64.so.2:strlen) redirected to 0x380764b1 (???)
--1759-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--1759--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--1759--   .. CRC mismatch (computed fc68135e wanted 45f5e986)
--1759--    object doesn't have a symbol table
--1759-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--1759--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--1759--   .. CRC mismatch (computed ae683f7e wanted 08c06df2)
--1759--    object doesn't have a symbol table
==1759== WARNING: new redirection conflicts with existing -- ignoring it
--1759--     old: 0x04019c50 (strlen              ) R-> (0000.0) 0x380764b1 ???
--1759--     new: 0x04019c50 (strlen              ) R-> (2007.0) 0x04c2e1a0 strlen
--1759-- REDIR: 0x4019a00 (ld-linux-x86-64.so.2:index) redirected to 0x4c2dd50 (index)
--1759-- REDIR: 0x4019c20 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2f2f0 (strcmp)
--1759-- REDIR: 0x401a970 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31da0 (mempcpy)
--1759-- Reading syms from /lib/x86_64-linux-gnu/libc-2.19.so
--1759--   Considering /lib/x86_64-linux-gnu/libc-2.19.so ..
--1759--   .. CRC mismatch (computed ac9b5ddb wanted a10d05bf)
--1759--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.19.so ..
--1759--   .. CRC is valid
--1759-- REDIR: 0x4ec3c50 (libc.so.6:strcasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--1759-- REDIR: 0x4ec5f40 (libc.so.6:strncasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--1759-- REDIR: 0x4ec3420 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--1759-- REDIR: 0x4ec16b0 (libc.so.6:rindex) redirected to 0x4c2da30 (rindex)
--1759-- REDIR: 0x4eb9660 (libc.so.6:malloc) redirected to 0x4c2ab10 (malloc)
==1759== Use of uninitialised value of size 8
==1759==    at 0x400EA7: expand_s (formatters.c:20)
==1759==    by 0x400D83: apply_f (expand.c:20)
==1759==    by 0x4009C0: _parse (parse.c:50)
==1759==    by 0x400AF0: _printf (_printf.c:28)
==1759==    by 0x400606: main (test.c:10)
==1759== 
==1759== Use of uninitialised value of size 8
==1759==    at 0x400E91: expand_s (formatters.c:22)
==1759==    by 0x400D83: apply_f (expand.c:20)
==1759==    by 0x4009C0: _parse (parse.c:50)
==1759==    by 0x400AF0: _printf (_printf.c:28)
==1759==    by 0x400606: main (test.c:10)
==1759== 
==1759== Use of uninitialised value of size 8
==1759==    at 0x400E94: expand_s (formatters.c:22)
==1759==    by 0x400D83: apply_f (expand.c:20)
==1759==    by 0x4009C0: _parse (parse.c:50)
==1759==    by 0x400AF0: _printf (_printf.c:28)
==1759==    by 0x400606: main (test.c:10)
==1759== 
--1759-- REDIR: 0x4eb9d00 (libc.so.6:free) redirected to 0x4c2bd80 (free)
==1759== 
==1759== HEAP SUMMARY:
==1759==     in use at exit: 14,287 bytes in 38 blocks
==1759==   total heap usage: 38 allocs, 0 frees, 14,287 bytes allocated
==1759== 
==1759== Searching for pointers to 38 not-freed blocks
==1759== Checked 76,872 bytes
==1759== 
==1759== LEAK SUMMARY:
==1759==    definitely lost: 456 bytes in 15 blocks
==1759==    indirectly lost: 13,831 bytes in 23 blocks
==1759==      possibly lost: 0 bytes in 0 blocks
==1759==    still reachable: 0 bytes in 0 blocks
==1759==         suppressed: 0 bytes in 0 blocks
==1759== Rerun with --leak-check=full to see details of leaked memory
==1759== 
==1759== Use --track-origins=yes to see where uninitialised values come from
==1759== ERROR SUMMARY: 65 errors from 3 contexts (suppressed: 0 from 0)
==1759== 
==1759== 21 errors in context 1 of 3:
==1759== Use of uninitialised value of size 8
==1759==    at 0x400E94: expand_s (formatters.c:22)
==1759==    by 0x400D83: apply_f (expand.c:20)
==1759==    by 0x4009C0: _parse (parse.c:50)
==1759==    by 0x400AF0: _printf (_printf.c:28)
==1759==    by 0x400606: main (test.c:10)
==1759== 
==1759== 
==1759== 21 errors in context 2 of 3:
==1759== Use of uninitialised value of size 8
==1759==    at 0x400E91: expand_s (formatters.c:22)
==1759==    by 0x400D83: apply_f (expand.c:20)
==1759==    by 0x4009C0: _parse (parse.c:50)
==1759==    by 0x400AF0: _printf (_printf.c:28)
==1759==    by 0x400606: main (test.c:10)
==1759== 
==1759== 
==1759== 23 errors in context 3 of 3:
==1759== Use of uninitialised value of size 8
==1759==    at 0x400EA7: expand_s (formatters.c:20)
==1759==    by 0x400D83: apply_f (expand.c:20)
==1759==    by 0x4009C0: _parse (parse.c:50)
==1759==    by 0x400AF0: _printf (_printf.c:28)
==1759==    by 0x400606: main (test.c:10)
==1759== 
==1759== ERROR SUMMARY: 65 errors from 3 contexts (suppressed: 0 from 0)
